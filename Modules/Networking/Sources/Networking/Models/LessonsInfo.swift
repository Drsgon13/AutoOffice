//
// LessonsInfo.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct LessonsInfo: Codable, Hashable, Identifiable {

    public var id = UUID()
    public var day: String?
    public var access: Bool?
    public var description: String?
    public var requestReport: String?
    public var trainingLessons: String?
    public var number: String?
    public var idTrainingLessons: String?
    public var checkReport: String?

    public init(day: String? = nil, access: Bool? = nil, description: String? = nil, requestReport: String? = nil, trainingLessons: String? = nil, number: String? = nil, idTrainingLessons: String? = nil, checkReport: String? = nil) {
        self.day = day
        self.access = access
        self.description = description
        self.requestReport = requestReport
        self.trainingLessons = trainingLessons
        self.number = number
        self.idTrainingLessons = idTrainingLessons
        self.checkReport = checkReport
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case day
        case access
        case description
        case requestReport = "request_report"
        case trainingLessons = "training_lessons"
        case number
        case idTrainingLessons = "id_training_lessons"
        case checkReport = "check_report"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(day, forKey: .day)
        try container.encodeIfPresent(access, forKey: .access)
        try container.encodeIfPresent(description, forKey: .description)
        try container.encodeIfPresent(requestReport, forKey: .requestReport)
        try container.encodeIfPresent(trainingLessons, forKey: .trainingLessons)
        try container.encodeIfPresent(number, forKey: .number)
        try container.encodeIfPresent(idTrainingLessons, forKey: .idTrainingLessons)
        try container.encodeIfPresent(checkReport, forKey: .checkReport)
    }
}

