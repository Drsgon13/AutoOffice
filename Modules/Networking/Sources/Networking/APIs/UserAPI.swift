//
// UserAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

open class UserAPI {

    /**
     getUserData
     
     - parameter login: (query) Login (optional)
     - parameter password: (query) Password (optional)
     - parameter method: (query) Method (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getUserData(login: String? = nil, password: String? = nil, method: String? = nil, apiResponseQueue: DispatchQueue = OpenAPIClient.apiResponseQueue, completion: @escaping ((_ data: UserInfo?, _ error: Error?) -> Void)) {
        getUserDataWithRequestBuilder(login: login, password: password, method: method).execute(apiResponseQueue) { result -> Void in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     getUserData
     - POST /json/
     - parameter login: (query) Login (optional)
     - parameter password: (query) Password (optional)
     - parameter method: (query) Method (optional)
     - returns: RequestBuilder<UserInfo> 
     */
    open class func getUserDataWithRequestBuilder(login: String? = nil, password: String? = nil, method: String? = nil) -> RequestBuilder<UserInfo> {
        let localVariablePath = "/json/"
        let localVariableURLString = OpenAPIClient.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "login": login?.encodeToJSON(),
            "password": password?.encodeToJSON(),
            "method": method?.encodeToJSON(),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<UserInfo>.Type = OpenAPIClient.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }
}
